name: CI testing

on:
  push:
    branches:
      - "master"
  pull_request:
    branches:
      - "master"
  schedule:
    - cron: "0 0 * * *"

jobs:
  test:
    name: Test on ${{ matrix.cfg.os }}, Python ${{ matrix.python-version }}, RDKit=${{ matrix.cfg.rdkit }}, OpenEye=${{ matrix.cfg.openeye }}
    runs-on: ${{ matrix.cfg.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - 3.6
          - 3.7
          # - 3.8
        cfg:
          - os: ubuntu-latest
            rdkit: true
            openeye: false

          - os: ubuntu-latest
            rdkit: false
            openeye: true

          - os: ubuntu-latest
            rdkit: true
            openeye: true

          - os: macOS-latest
            rdkit: true
            openeye: true

    env:
      CI_OS: ${{ matrix.cfg.os }}
      RDKIT: ${{ matrix.cfg.rdkit }}
      OPENEYE: ${{ matrix.cfg.openeye }}
      PYVER: ${{ matrix.python-version }}
      OE_LICENSE: ${{ github.workspace }}/oe_license.txt

    steps:
      - uses: actions/checkout@v2
        with:
          path: main
      - name: Additional info about the build
        shell: bash
        run: |
          uname -a
          df -h
          ulimit -a
      - name: Fix conda in MacOS
        shell: bash
        if: startsWith(matrix.cfg.os, 'macOS')
        run: |
          sudo chown -R $(id -u):$(id -g) ${CONDA}
      - name: Configure conda
        shell: bash
        run: |
          . devtools/gh-actions/initialize_conda.sh
          conda activate
          conda config --set always_yes yes
          conda config --add channels omnia --add channels conda-forge --add channels openeye
          conda install --quiet conda conda-build jinja2 anaconda-client
          conda update --quiet --all
          conda info --all
          conda list
      - name: Decrypt OpenEye
        shell: bash
        env:
          ENC_OE_LICENSE: ${{ secrets.OE_LICENSE_EXP_DEC2020 }}
        run: |
          echo "${ENC_OE_LICENSE}" > ${OE_LICENSE}
      - name: Prepare test enviroment
        with:
          path: main
        shell: bash
        run: |
          . devtools/gh-actions/initialize_conda.sh
          conda activate
          python devtools/scripts/create_conda_env.py -n=test -p=$PYVER devtools/conda-envs/test_env.yaml
          conda activate test
          if [[ "$RDKIT" == false ]]; then conda uninstall rdkit --force; fi
          if [[ "$OPENEYE" == false ]]; then conda uninstall openeye-toolkits --force: fi
          if [[ "$OPENEYE" == true ]]; then
            python -c "from openeye import oechem; assert oechem.OEChemIsLicensed()"
          fi
          python -m pip install --no-deps .

      - name: Checkout openforcefield
        uses: actions/checkout@v2
        with:
          repository: openforcefield/openforcefield
          path: openforcefield
        shell: bash
        run: |
          . devtools/gh-actions/initialize_conda.sh
          conda activate test
          python -m pip install --no-deps .

      - name: Test the package
        with:
          path: main
        shell: bash
        run: |
          . devtools/gh-actions/initialize_conda.sh
          conda activate test
          pytest qcsubmit --verbose --ignore=examples --ignore=docs

      - name: Codecov
        uses: codecov/codecov-action@v1